{"version":3,"file":"SortableHeaderCell.js","sourceRoot":"","sources":["../../../../src/common/cells/headerCells/SortableHeaderCell.tsx"],"names":[],"mappings":";AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,SAAS,EAAE,MAAM,UAAU,CAAC;AACrC,OAAO,EAAiB,WAAW,EAAE,MAAM,aAAa,CAAC;AAEzD,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,MAAM,gBAAgB,CAAA;AAEvD,IAAM,SAAS,GAAG,CAAA;IAChB,GAAC,WAAW,CAAC,GAAG,IAAG,cAAM,OAAA,oBAAC,WAAW,IAAC,IAAI,EAAE,EAAE,GAAI,EAAzB,CAAyB;IAClD,GAAC,WAAW,CAAC,IAAI,IAAG,cAAM,OAAA,oBAAC,SAAS,IAAC,IAAI,EAAE,EAAE,GAAI,EAAvB,CAAuB;IACjD,GAAC,WAAW,CAAC,IAAI,IAAG,cAAM,OAAA,IAAI,EAAJ,CAAI;MACtB,CAAA,CAAC;AAWX,MAAM,CAAC,OAAO,UAAU,kBAAkB,CAAC,KAAY;IAC7C,IAAA,qBAAM,EAAE,uBAAO,EAAE,qBAAM,EAAE,mCAAa,EAAE,+CAAmB,EAAE,6CAAkB,CAAW;IAClG,SAAS,OAAO;QACd,IAAI,SAAS,CAAC;QACd,QAAQ,aAAa,EAAE;YACrB,KAAK,WAAW,CAAC,GAAG;gBAClB,SAAS,GAAG,mBAAmB,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;gBACtE,MAAM;YACR,KAAK,WAAW,CAAC,IAAI;gBACnB,SAAS,GAAG,mBAAmB,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC;gBACrE,MAAM;YACR;gBACE,SAAS,GAAG,mBAAmB,CAAC,CAAC,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,CAAC;gBACrE,MAAM;SACT;QACD,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;IAChC,CAAC;IAEO,IAAA,sCAAc,CAAY;IAClC,IAAM,OAAO,GAAG,CAAC,cAAc;QAC7B,CAAC,CAAC,MAAM,CAAC,IAAI;QACb,CAAC,CAAC,SAAS,CAAC,cAAc,CAAC;YACzB,CAAC,CAAC,KAAK,CAAC,YAAY,CAAC,cAAc,EAAE,EAAE,MAAM,QAAA,EAAE,CAAC;YAChD,CAAC,CAAC,KAAK,CAAC,aAAa,CAAC,cAAc,EAAE,EAAE,MAAM,QAAA,EAAE,OAAO,SAAA,EAAE,CAAC,CAAC;IAE/D,IAAM,IAAI,GAAG,SAAS,CAAC,aAAa,CAAC,CAAC;IACtC,IAAM,SAAS,GAAG,8BAAM,SAAS,EAAC,YAAY,IAAE,IAAI,EAAE,CAAQ,CAAC;IAC/D,OAAO,CACL,6BAAK,SAAS,EAAC,0BAA0B,EAAC,OAAO,EAAE,OAAO;QACvD,kBAAkB,KAAK,QAAQ,IAAI,SAAS;QAC5C,OAAO;QACP,kBAAkB,KAAK,OAAO,IAAI,SAAS,CACxC,CACP,CAAC;AACJ,CAAC","sourcesContent":["import React from 'react';\nimport { isElement } from 'react-is';\nimport { HeaderRowType, DEFINE_SORT } from '../../enums';\nimport { CalculatedColumn } from '../../types';\nimport { FaCaretDown, FaCaretUp } from 'react-icons/fa'\n\nconst SORT_TEXT = {\n  [DEFINE_SORT.ASC]: () => <FaCaretDown size={18} />,\n  [DEFINE_SORT.DESC]: () => <FaCaretUp size={18} />,\n  [DEFINE_SORT.NONE]: () => null\n} as const;\n\nexport interface Props {\n  column: CalculatedColumn;\n  rowType: HeaderRowType;\n  onSort(columnKey: string, direction: DEFINE_SORT): void;\n  sortDirection: DEFINE_SORT;\n  sortDescendingFirst: boolean;\n  sortHandlePosition: string;\n}\n\nexport default function SortableHeaderCell(props: Props) {\n  const { column, rowType, onSort, sortDirection, sortDescendingFirst, sortHandlePosition } = props;\n  function onClick() {\n    let direction;\n    switch (sortDirection) {\n      case DEFINE_SORT.ASC:\n        direction = sortDescendingFirst ? DEFINE_SORT.NONE : DEFINE_SORT.DESC;\n        break;\n      case DEFINE_SORT.DESC:\n        direction = sortDescendingFirst ? DEFINE_SORT.ASC : DEFINE_SORT.NONE;\n        break;\n      default:\n        direction = sortDescendingFirst ? DEFINE_SORT.DESC : DEFINE_SORT.ASC;\n        break;\n    }\n    onSort(column.key, direction);\n  }\n\n  const { headerRenderer } = column;\n  const content = !headerRenderer\n    ? column.name\n    : isElement(headerRenderer)\n      ? React.cloneElement(headerRenderer, { column })\n      : React.createElement(headerRenderer, { column, rowType });\n\n  const icon = SORT_TEXT[sortDirection];\n  const sortArrow = <span className=\"pull-right\">{icon()}</span>;\n  return (\n    <div className=\"rdg-sortable-header-cell\" onClick={onClick}>\n      {sortHandlePosition === 'before' && sortArrow}\n      {content}\n      {sortHandlePosition === 'after' && sortArrow}\n    </div>\n  );\n}\n"]}