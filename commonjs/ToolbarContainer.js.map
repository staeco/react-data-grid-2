{"version":3,"file":"ToolbarContainer.js","sourceRoot":"","sources":["../src/ToolbarContainer.tsx"],"names":[],"mappings":";;;AAAA,wDAA0B;AAC1B,qCAAyD;AAYzD,SAAwB,gBAAgB,CAAC,EAAsE;QAApE,OAAO,aAAA,EAAE,OAAO,aAAA,EAAE,SAAS,eAAA,EAAE,cAAc,oBAAA;IACpF,IAAI,CAAC,OAAO,EAAE;QACZ,OAAO,IAAI,CAAC;KACb;IAED,IAAM,YAAY,GAAG,EAAE,OAAO,SAAA,EAAE,cAAc,gBAAA,EAAE,SAAS,WAAA,EAAE,CAAC;IAE5D,IAAI,oBAAS,CAAC,OAAO,CAAC,EAAE;QACtB,OAAO,eAAK,CAAC,YAAY,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KAClD;IAED,IAAI,6BAAkB,CAAC,OAAO,CAAC,EAAE;QAC/B,OAAO,eAAK,CAAC,aAAa,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;KACnD;IAED,OAAO,IAAI,CAAC;AACd,CAAC;AAhBD,mCAgBC","sourcesContent":["import React from 'react';\nimport { isElement, isValidElementType } from 'react-is';\nimport { ColumnList } from './common/types';\nimport { ReactDataGridProps } from './ReactDataGrid';\n\nexport interface ToolbarProps {\n  columns: ColumnList;\n  rowsCount: number;\n  onToggleFilter(): void;\n}\n\ntype ToolbarContainerProps = ToolbarProps & Pick<ReactDataGridProps, 'toolbar'>;\n\nexport default function ToolbarContainer({ toolbar, columns, rowsCount, onToggleFilter }: ToolbarContainerProps) {\n  if (!toolbar) {\n    return null;\n  }\n\n  const toolBarProps = { columns, onToggleFilter, rowsCount };\n\n  if (isElement(toolbar)) {\n    return React.cloneElement(toolbar, toolBarProps);\n  }\n\n  if (isValidElementType(toolbar)) {\n    return React.createElement(toolbar, toolBarProps);\n  }\n\n  return null;\n}\n"]}